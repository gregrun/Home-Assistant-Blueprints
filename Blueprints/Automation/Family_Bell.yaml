blueprint:
  name: Family Bell (TTS entity + chime + volume)
  domain: automation
  description: >
    Speak a message on selected weekdays at a set time using a TTS entity
    (e.g., tts.google_en_com). Optional pre-chime and temporary volume boost
    with automatic restore. Loops over each selected media_player.

  input:
    tts_entity:
      name: TTS voice/entity
      selector:
        entity:
          domain: tts

    media_players:
      name: Speakers (pick one or more)
      selector:
        entity:
          domain: media_player
          multiple: true

    bell_time:
      name: Time
      selector:
        time: {}

    weekdays:
      name: Days of week
      selector:
        select:
          mode: list
          multiple: true
          options: [mon, tue, wed, thu, fri, sat, sun]
      default: [mon, tue, wed, thu, fri]

    message:
      name: Message to speak
      selector:
        text:
          multiline: true

    volume:
      name: Temporary volume (optional)
      description: "0.0â€“1.0; leave blank to keep current volume"
      default:
      selector:
        number:
          min: 0
          max: 1
          step: 0.05
          mode: slider

    chime_url:
      name: Pre-chime URL (optional)
      description: "Short MP3/WAV reachable by HA (e.g., /media/chimes/bell.mp3 or http(s) URL)"
      default:
      selector:
        text: {}

    chime_delay:
      name: Delay after chime (seconds)
      default: 2
      selector:
        number:
          min: 0
          max: 10
          step: 1
          mode: slider

mode: single

trigger:
  - platform: time
    at: !input bell_time

condition:
  - condition: time
    weekday: !input weekdays

variables:
  tmp_volume: !input volume
  chime: !input chime_url
  chime_wait: !input chime_delay
  say_text: !input message

action:
  - repeat:
      for_each: !input media_players
      sequence:
        - variables:
            speaker: "{{ repeat.item }}"
            prev_vol: "{{ state_attr(repeat.item, 'volume_level') }}"

        # Optional temporary volume boost
        - choose:
            - conditions:
                - condition: template
                  value_template: "{{ tmp_volume is not none and (tmp_volume | string) != '' }}"
              sequence:
                - service: media_player.volume_set
                  target:
                    entity_id: "{{ speaker }}"
                  data:
                    volume_level: "{{ tmp_volume | float(0) }}"
          default: []

        # Optional chime before speaking
        - choose:
            - conditions:
                - condition: template
                  value_template: "{{ (chime | default('')) | length > 0 }}"
              sequence:
                - service: media_player.play_media
                  target:
                    entity_id: "{{ speaker }}"
                  data:
                    media_content_id: "{{ chime }}"
                    media_content_type: music
                - delay:
                    seconds: "{{ chime_wait | int(0) }}"
          default: []

        # Speak the message to THIS speaker via the selected TTS entity
        - service: tts.speak
          target:
            entity_id: !input tts_entity
          data:
            media_player_entity_id: "{{ speaker }}"
            message: "{{ say_text }}"

        # Brief pause, then restore original volume if we changed it and we knew the previous value
        - delay:
            seconds: 2
        - choose:
            - conditions:
                - condition: template
                  value_template: >
                    {{ tmp_volume is not none and (tmp_volume | string) != '' and prev_vol is not none }}
              sequence:
                - service: media_player.volume_set
                  target:
                    entity_id: "{{ speaker }}"
                  data:
                    volume_level: "{{ prev_vol }}"
          default: []