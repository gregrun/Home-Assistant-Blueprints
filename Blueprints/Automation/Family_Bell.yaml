blueprint:
  name: Family Bell (Minimal + Reliable)
  description: >
    Simple Google Family Bell replacement: speak a message to one or more speakers
    at a set time on selected weekdays. One automation per bell.
  domain: automation
  input:
    bell_name:
      name: Bell name (reference only)
      selector:
        text: {}
    media_players:
      name: Speakers
      description: One or more media_player entities (Nest, Hub, Sonos, etc.)
      selector:
        target:
          entity:
            domain: media_player
    bell_time:
      name: Time
      selector:
        time: {}
    weekdays:
      name: Days of week
      selector:
        select:
          mode: list
          multiple: true
          options: [Mon, Tue, Wed, Thu, Fri, Sat, Sun]
      default: [Mon, Tue, Wed, Thu, Fri]
    tts_service:
      name: TTS service
      description: Pick a TTS you have enabled
      selector:
        select:
          options:
            - tts.google_translate_say
            - tts.cloud_say
      default: tts.google_translate_say
    language:
      name: Language (only used by google_translate)
      default: en
      selector:
        text: {}
    message:
      name: Message to speak
      selector:
        text:
          multiline: true

mode: single

trigger:
  - platform: time
    at: !input bell_time

variables:
  weekdays: !input weekdays
  tts_service: !input tts_service
  lang: !input language
  message: !input message

condition:
  - condition: template
    value_template: >
      {% set today = ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'][now().weekday()] %}
      {{ today in weekdays }}

action:
  # Call the right TTS service without if/then blocks
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ tts_service == 'tts.google_translate_say' }}"
        sequence:
          - service: tts.google_translate_say
            target: !input media_players
            data:
              message: "{{ message }}"
              language: "{{ lang }}"
      - conditions:
          - condition: template
            value_template: "{{ tts_service == 'tts.cloud_say' }}"
        sequence:
          - service: tts.cloud_say
            target: !input media_players
            data:
              message: "{{ message }}"
    default: []